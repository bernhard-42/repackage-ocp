name: Common workflow setup

on: workflow_call

jobs:
  config:
    steps:
      - uses: actions/checkout@v4
      - name: (All) Set up Python ${{ matrix.python-version }} via micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment-${{ matrix.python-version }}.yml
          log-level: debug
          init-shell: ${{ matrix.shells }}
          cache-downloads: true

      - name: Get number of CPUs
        shell: bash -l {0}
        id: cpu-count
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            cpu_count=$(sysctl -n hw.logicalcpu)
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            cpu_count=$(nproc)
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            cpu_count=$NUMBER_OF_PROCESSORS
          else
            cpu_count=1
          fi
          echo "cpu_count=$cpu_count" >> $GITHUB_OUTPUT

          echo "=> Using $cpu_count CPUs"

      # - - - - - - - - - - - - - - - - - - - - -
      # Install toolchain if needed
      # - - - - - - - - - - - - - - - - - - - - -

      - name: (Ubuntu) Install dependencies
        if: runner.os == 'Linux'
        shell: bash -l {0}
        run: |
          # do not use freeimage freetype fontconfig from anaconda. Prevents from manylinux_2_31_x86_64 wheel
          sudo apt-get install -y mesa-common-dev libegl1-mesa-dev libgl1-mesa-dev \
                                  libglu1-mesa-dev freeglut3-dev libxcursor-dev \
                                  libfreeimage-dev libfreetype-dev libfontconfig-dev

      - name: (Mac, Windows) Install dependencies
        if: runner.os != 'Linux'
        shell: bash -l {0}
        run: |
          micromamba activate build-ocp
          micromamba install -y fontconfig=2.13.* freetype=2.12.* freeimage=3.18.*

          if [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install gsed
          fi

      - name: (Mac) Install MacOS SDK
        if: unner.os == 'macOS' && steps.cache-ocp-restore.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          set -euo pipefail

          curl -L -O https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz
          sudo tar -xf MacOSX11.3.sdk.tar.xz -C /opt
          sudo mkdir -p /opt/usr/local/
          sudo mkdir -p /usr/local/include
          sudo ln -s /opt/MacOSX11.3.sdk/usr/include /opt/usr/local/include
          sudo ln -s /opt/MacOSX11.3.sdk/System/Library/Frameworks/OpenGL.framework/Headers /usr/local/include/OpenGL
